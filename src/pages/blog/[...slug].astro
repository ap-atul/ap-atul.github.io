---
import BackToPrev from "@components/BackToPrev.astro";
import Container from "@components/Container.astro";
import PostNavigation from "@components/PostNavigation.astro";
import PageLayout from "@layouts/PageLayout.astro";
import { formatDate, readingTime } from "@lib/utils";
import { type CollectionEntry, getCollection } from "astro:content";

export async function getStaticPaths() {
  const getAdjacentPosts = (
    currentId: string,
    postList: CollectionEntry<"blog">[]
  ) => {
    const index = postList.findIndex((post) => post.id === currentId);
    return {
      prev: index > 0 ? postList[index - 1] : null,
      next:
        index >= 0 && index < postList.length - 1 ? postList[index + 1] : null,
    };
  };

  const posts = (await getCollection("blog"))
    .filter((post) => !post.data.draft)
    .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());
  return posts.map((post) => {
    const { prev, next } = getAdjacentPosts(post.id, posts);
    return {
      params: { slug: post.slug },
      props: { post, prev, next },
    };
  });
}

interface Props {
  post: CollectionEntry<"blog">;
  prev: CollectionEntry<"blog"> | null;
  next: CollectionEntry<"blog"> | null;
}

const { post, next, prev } = Astro.props;
const { Content } = await post.render();
---

<PageLayout
  title={post.data.title}
  description={post.data.description}
  image={post.data.image?.src}
  keywords={post.data.keywords}
>
  <Container>
    <div class="animate">
      <BackToPrev href="/blog"> back to blog </BackToPrev>
    </div>
    <div class="mt-10 itmes-center justify-center flex">
      {
        post.data.image && (
          <img
            src={post.data.image.src}
            width="900px"
            height="300px"
            alt={post.data.title}
            class="h-[300px] w-full object-cover rounded-xl"
          />
        )
      }
    </div>
    <div class="text-center mt-10 mx-12 mb-10 animate">
      <div class="animate text-4xl font-semibold text-black dark:text-white">
        <h1>{post.data.title}</h1>
      </div>
      <div
        class="flex gap-2 items-center justify-center mt-3 text-xs text-muted-foreground"
      >
        <span>
          <img
            src="/logo.webp"
            alt="atul"
            class="inline-block w-6 h-6 rounded-full"
          />
          atul |
        </span>
        <span>{formatDate(post.data.date)}</span>
        <span class="font-light">|</span>
        <span>{readingTime(post.body)}</span>
      </div>
      <div class="flex flex-wrap justify-center gap-2 mt-2 text-xs">
        {
          post.data.tags.map((tag) => (
            <span class="px-2 py-1 text-xs w-max bg-muted-background rounded-full">
              #{tag}
            </span>
          ))
        }
      </div>
    </div>
    <PostNavigation prevPost={prev} nextPost={next} />
    <article class="animate mt-10">
      <Content />
    </article>
    <div class="flex mt-10 mb-20">
      <button
        id="like-button"
        class="w-fit text-xs flex pl-2 pr-2 items-center gap-1 flex-nowrap rounded border border-black/15 dark:border-white/20 hover:bg-black/5 dark:hover:bg-white/5 hover:text-black dark:hover:text-white transition-colors duration-300 ease-in-out"
        ><strong class="text-xl">❤</strong>like</button
      >
    </div>
  </Container>
</PageLayout>

<script is:inline type="module">
  import { initializeApp } from "https://www.gstatic.com/firebasejs/11.6.0/firebase-app.js";
  import {
    doc,
    getFirestore,
    setDoc,
  } from "https://www.gstatic.com/firebasejs/11.6.0/firebase-firestore-lite.js";

  const firebaseConfig = {
    apiKey: "AIzaSyCLlAoQUNsFRZb2hmyfCo3Ijtn0HKPcS_w",
    authDomain: "atulpatare-39cfa.firebaseapp.com",
    projectId: "atulpatare-39cfa",
    storageBucket: "atulpatare-39cfa.firebasestorage.app",
    messagingSenderId: "270211196082",
    appId: "1:270211196082:web:5558e3035ccc83da49d5ab",
  };
  // Initialize Firebase
  const app = initializeApp(firebaseConfig);
  const db = getFirestore(app);

  const likeButton = document.getElementById("like-button");
  likeButton.addEventListener("click", likePost);

  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  function likePost() {
    const likeButton = document.getElementById("like-button");
    likeButton.innerHTML = `<strong class="text-xl">❤</strong>thanks`;

    const page = window.location.pathname.split("/").pop();

    const payload = {
      createdAt: new Date(),
      referer: document.referrer,
      page,
      path: window.location.pathname,
    };
    setDoc(doc(db, "likes", page), payload);
  }
</script>
